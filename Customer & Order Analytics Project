--In this project, I use SQLite to query data from multiple databases to quantify statistics about monthly sales. 

#1 How many orders were placed in January? 

SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID’

#2 How many of those orders were for an iPhone?

SELECT product, COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE product = ‘iPhone' 
AND length(orderid) = 6
AND orderid <> 'Order ID'

#3 Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales f
    ON c.order_id = f.orderID
WHERE length(order_id) = 6
AND order_id <> 'Order ID’

#4 Which product was the cheapest one sold in January, and what was the price?

SELECT DISTINCT product,MIN(price)
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price ASC LIMIT 1

#5 What is the total revenue for each product sold in January? 

SELECT product,SUM(quantity)*price AS total_revenue
FROM BIT_DB.jansales
GROUP BY product

#6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product,SUM(quantity), SUM(quantity)*price AS total_revenue
FROM BIT_DB.febsales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

#7 How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT 
COUNT(DISTINCT c.acctnum)AS customers, 
AVG(quantity*price) AS avg_amount_spent
FROM BIT_DB.febsales f
    LEFT JOIN BIT_DB.customers c
        ON c.order_id = f.orderid
WHERE f.quantity > 2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#8 List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT  product, SUM(quantity)
FROM BIT_DB.febsales
WHERE location LIKE '%Los Angeles%'
GROUP BY product
